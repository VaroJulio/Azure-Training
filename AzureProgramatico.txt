Interactuar de forma programática con azure nos permite:

Consistencia y velocidad para los despliegues y provisionamientos de máquinas virtuales.
Cualquier ambiente productivo puede ser implementado usando automatización.
También es útil construir ambiente similares como desarrrollo y pruebas.

Podemos interactuar programáticamente con Azure a través de:

Azure CLI: Disponible en todas las plataformas.
Powershell: Sólo para Windows o Powershell core que es multiplataforma. Lo mas apropiado sería
instalar el paquete AzureRM --> Resource Manager. Sin este paquete se trabaja con el modelo clásico de 
despliegue.

CloudShell: El shell o soncola de comandos incorporada en el portal de azure. Tenemos a través de ella Bash,
powershell y Azure CLI. Guarda los scripts en la carpeta $HOME.

Para crear un VM programáticamente debemos crear en orden los siguientes componentes:

-Resource Group
-Virtual Network
-Subnet
-Public IP 
-Network Security Group
-NIC --> Interfaz de red
-Virtual Machine
-Open port for management


Comandos Azure CLI:

az login --subscription "Visual Studio Professional"

az group create --name "vmcourse-rg" --location "southcentralus"

az group list -o table

az network vnet create --resource-group "vmcourse-rg" --name "vmcourse--vnet-1" --address-prefix "12.1.0.0/16" -- subnet-name "vmcourse-subnet-1" --subnet-prefix "12.1.1.0/24"

az network vnet list -o table

az network public-ip create --resource-group "vmcourse-rg" -- name "vmcourse-linux-pip-1"

az network nsg create --resource-group "vmcourse-rg" --name "vmcourse-linux-nsg-1"

az network nsg list -o table

az network nic create --resource-group "vmcourse-rg" --name "vmcourse-linux-1-nic-1" --vnet-name "vmcourse--vnet-1" --subnet "vmcourse-subnet-1" --network-security-group "vmcourse-linux-nsg-1" --public-ip-address "vmcourse-linux-pip-1"

az network nic list -o table

az vm create --resource-group "vmcourse-rg" --location "southcentralus" --name "vmcourse-linux-1" --nics "vmcourse-linux-1-nic-1" --image "rhel" --admin-username "eladmin" --generate-ssh-keys

az vm create --help

az vm open-port --resource-group "vmcourse-rg" --name "vmcourse-linux-1" --port "22"

az vm list-ip-addresses --name "vmcourse-linux-1" -o table

ssh -l eladmin 104.214.91.188 


Comandos PowerShell:

Si tenemos dificultades con los comandos quiere decir que debemos actualizar la versión de powershell.

-Install-Module -Name AzureRM -AllowClobber -Force

-Import-Module AzureRM

Connect-AzureRmAccount -Subscription "Visual Studio Professional"

New-AzureRmResourceGroup -Name 'demo-rg' -Location 'centralus'

$rg = Get-AzureRmResourceGroup -Name 'demo-rg' -Location 'centralus'

$rg

$subnetConfig = New-AzureRmVirtualNetworkSubnetConfig -Name 'demo-subnet-1' -AddressPrefix '10.3.1.0/24'

$subnetConfig

$vnet = New-AzureRmVirtualNetwork -ResourceGroupName $rg.ResourceGroupName -Location $rg.Location -Name 'demo-vnet-1' -AddressPrefix '10.3.0.0/16' -Subnet $subnetConfig

$vnet

$pip = New-AzureRmPublicIpAddress -ResourceGroupName $rg.ResourceGroupName -Location $rg.Location -Name 'demo-pip-1' -AllocationMethod Static

$pip

$rule1 = New-AzureRmNetworkSecurityRuleConfig -Name ssh-rule -Description 'Allow SSH' -Access Allow -Protocol Tcp -Direction Inbound -Priority 100 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 22

$rule1

$nsg = New-AzureRmNetworkSecurityGroup -ResourceGroupName $rg.ResourceGroupName -Location $rg.Location -Name 'demo-linux-nsg-1' -SecurityRules $rule1

$nsg

$subnet = $vnet.Subnets | Where-Object { $_.Name -eq 'demo-subnet-1'}

$nic = New-AzureRmNetworkInterface -ResourceGroupName $rg.ResourceGroupName -Location $rg.Location -Name 'demo-lin-1-nic-1' -Subnet $Subnet -PublicIpAddress $pip -NetworkSecurityGroup $nsg

$nic

$LinuxVmConfig = New-AzureRmVMConfig -VMName 'demo-linux-1' -VMSize 'Standard_F1'

$password = ConvertTo-SecureString 'password123412123$%^&*' -AsPlainText -Force
$LinuxCred = New-Object System.MAnagement.Automation.PSCredential ('admindemo', $password)

$LinuxVmConfig = Set-AzureRmVMOperatingSystem -VM $LinuxVmConfig -Linux -ComputerName 'demo-linux-1' -DisablePasswordAuthentication -Credential $LinuxCred

$sshPublicKey = Get-Content "~/.ssh/id_rsa.pub" 
//$sshPublicKey = Get-Content -Raw "$env:USERPROFILE\.ssh\id_rsa.pub"

Get-Content -Raw "$env:USERPROFILE\.ssh\id_rsa.pub"
Add-AzureRmVMSshPublicKey -VM $LinuxVmConfig -KeyData $sshPublicKey -Path "/home/admindemo/.ssh/authorized_keys"

Get-AzureRmVMImageSku -Location $rg.Location -PublisherName "Redhat" -Offer "rhel"

$LinuxVmConfig = Set-AzureRmVMSourceImage -VM $LinuxVmConfig -PublisherName 'Redhat' -Offer 'rhel' -Skus '7.4' -Version 'latest'

$LinuxVmConfig = Add-AzureRmVMNetworkInterface -VM $LinuxVmConfig -Id $nic.Id

Get-AzureRmVMSize -Location "CentralUS"

New-AzureRmVM -ResourceGroupName $rg.ResourceGroupName -Location $rg.Location -VM $LinuxVmConfig

$MyIP = Get-AzureRmPublicIpAddress -ResourceGroupName $rg.ResourceGroupName -Name $pip.Name | Select-Object -ExpandProperty IpAddress

$MyIP

ssh -l admindemo $MyIP

Remove-AzureRmResourceGroup -Name "demo-rg" -Force